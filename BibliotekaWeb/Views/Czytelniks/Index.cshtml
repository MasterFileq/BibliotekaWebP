@model IEnumerable<BibliotekaWeb.Models.CzytelnikViewModel>

@{
    ViewData["Title"] = "Czytelnicy";
}

<h1>Czytelnicy</h1>

<form asp-action="Index" method="get" class="mb-4">
    <div class="row">
        <div class="col-md-3">
            <label for="searchEmail">Email:</label>
            <input type="text" name="searchEmail" class="form-control" value="@ViewData["searchEmail"]" />
        </div>
        <div class="col-md-2">
            <label for="minWypozyczenia">Min. wypożyczeń:</label>
            <input type="number" name="minWypozyczenia" class="form-control" value="@ViewData["minWypozyczenia"]" min="0" />
        </div>
        <div class="col-md-2">
            <label for="maxWypozyczenia">Maks. wypożyczeń:</label>
            <input type="number" name="maxWypozyczenia" class="form-control" value="@ViewData["maxWypozyczenia"]" min="0" />
        </div>
        <div class="col-md-2 mt-4">
            <button type="submit" class="btn btn-primary">Filtruj</button>
            <a asp-action="Index" class="btn btn-secondary">Wyczyść</a>
        </div>
    </div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Email</th> 
            <th>Ilość wypożyczonych książek</th>
            <th>Kara</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="4" class="text-center">Brak czytelników do wyświetlenia.</td> 
            </tr>
        }
        else
        {
            @foreach (var czytelnik in Model)
            {
                <tr>
                    <td>@czytelnik.User.Email</td> 
                    <td>@czytelnik.IloscWypozyczonychKsiazek</td>
                    <td>@czytelnik.SumaKar.ToString("C", new System.Globalization.CultureInfo("pl-PL"))</td>
                    <td>
                        @if (User.IsInRole("Administrator"))
                        {
                            <a asp-action="Details" asp-route-id="@czytelnik.UserId" class="btn btn-info btn-sm">Szczegóły</a>
                            <a asp-action="Edit" asp-route-id="@czytelnik.UserId" class="btn btn-warning btn-sm">Edytuj</a>
                            <form asp-action="DeleteConfirmed" method="post" style="display:inline;" onsubmit="return confirm('Czy na pewno chcesz usunąć tego czytelnika?');">
                                <input type="hidden" name="id" value="@czytelnik.UserId" />
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger btn-sm">Usuń</button>
                            </form>
                        }
                        @if (User.IsInRole("Administrator") || User.IsInRole("Bibliotekarz"))
                        {
                            <a asp-action="AssignBook" asp-route-czytelnikId="@czytelnik.UserId" class="btn btn-primary btn-sm">Przypisz książkę</a>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}